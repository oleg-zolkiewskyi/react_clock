{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","console","log","setState","oldName","newName","props","name","clearInterval","toLocaleTimeString","nameClock","className","Component","getRandomName","value","Math","random","toString","slice","App","clockName","hasClock","timerForClock","document","addEventListener","event","button","e","ReactDOM","render","getElementById"],"mappings":"qMAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAEpCC,QAAQC,IAAI,EAAKR,MAAMC,MACnB,EAAKQ,SAAS,CAAER,KAAM,IAAIC,SACzB,OAZP,gCAeE,SAAmBQ,GACjB,IAAMC,EAAUP,KAAKQ,MAAMC,KAEvBH,EAAQG,OAASF,GAEnBJ,QAAQC,IAAR,uBAA4BE,EAAQG,KAApC,eAA+CF,MApBrD,kCAwBE,WACEN,OAAOS,cAAcV,KAAKD,WAzB9B,oBA4BE,WACE,IAAMF,EAAOG,KAAKJ,MAAMC,KAAKc,qBACvBC,EAAYZ,KAAKQ,MAAMC,KAE7B,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGD,IAGF,YAED,sBAAMC,UAAU,cAAhB,SACGhB,WAzCX,GAA2BiB,a,MCN3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACEzB,MAAyB,CACvB0B,UAAWP,IACXQ,UAAU,GAHd,EAMEC,cAAgB,EANlB,uDAQE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,eAAe,SAACC,GACnB,IAAjBA,EAAMC,QACR,EAAKvB,SAAS,CAAEkB,UAAU,OAI9BE,SAASC,iBAAiB,SAAS,SAACG,GACjB,IAAbA,EAAED,QACJ,EAAKvB,SAAS,CAAEkB,UAAU,OAI9BvB,KAAKwB,cAAgBvB,OAAOC,aAAY,WACtC,EAAKG,SAAS,CAAEiB,UAAWP,QAC1B,QAvBP,oBA0BE,WACE,MAAgCf,KAAKJ,MAA7B0B,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEnB,OACE,sBAAKV,UAAU,MAAf,UACE,6CACCU,GAAY,cAAC,EAAD,CAAOd,KAAMa,WAhClC,GAAyBR,aCZzBgB,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.9cd248fb.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      // eslint-disable-next-line\n\t\tconsole.log(this.state.date);\n      this.setState({ date: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(oldName: Props) {\n    const newName = this.props.name;\n\n    if (oldName.name !== newName) {\n      // eslint-disable-next-line\n      console.log(`Renamed from ${oldName.name} to ${newName}`)\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const date = this.state.date.toLocaleTimeString();\n    const nameClock = this.props.name;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {nameClock}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    clockName: getRandomName(),\n    hasClock: true,\n  };\n\n  timerForClock = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event) => {\n      if (event.button === 2) {\n        this.setState({ hasClock: false });\n      }\n    });\n\n    document.addEventListener('click', (e) => {\n      if (e.button === 0) {\n        this.setState({ hasClock: true });\n      }\n    });\n\n    this.timerForClock = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}